[project]
name = "biodb"
dynamic = ["version"]
authors = [
    {name = "Scientifc Software Engineering Center at JHU", email = "ssec@jhu.edu"},
]
description = "A base template for creating Django applications for collecting patient data."
readme = "README.md"
license = {file = "LICENSE"}

requires-python = ">=3.11"
dependencies = [
    "boto3",
    "django",
    "django-crontab",
    "django-decorator-include",
    "django-health-check",
    "django-nested-admin",
    "django-storages[s3]",
    "django-sql-explorer[charts]",
    "gunicorn",
    "kaleido",
    "openpyxl",
    "pandas",
    "plotly",
    "psycopg[binary,pool]",
    "pyyaml",
    "whitenoise",
    "xlsxwriter"
]

[project.optional-dependencies]
dev = [
    "bandit>=1.7",
    "build",
    "factory-boy",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "ruff",
    "setuptools>=61.2",
    "setuptools_scm[toml]>=8.0",
    "tox"
]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-automodapi",
    "nbsphinx"
]

[project.urls]
homepage = "https://github.com/ssec-jhu/biodb"
documentation = "https://github.com/ssec-jhu/biodb"
repository = "https://github.com/ssec-jhu/biodb"

[build-system]
requires = ["setuptools>=61.2", "setuptools_scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["biodb"]
zip-safe = false
include-package-data = true

[tool.setuptools_scm]
fallback_version = "1.0.0"
version_file = "biodb/_version.py"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "biodb.settings.dev"
markers = [
    "allow_aliases: override setiings.EXPLORER_DATA_EXPORTERS_ALLOW_DATA_FILE_ALIAS (where applicable)",
    "media_root: override settings.MEDIA_ROOT (where applicable)",
    "include_data_files: override settings.EXPLORER_DATA_EXPORTERS_INCLUDE_DATA_FILES (where applicable)",
    "sql: specifiy SQL query (where applicable)",
    "auto_find_previous_visit: override settings.AUTO_FIND_PREVIOUS_VISIT"]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.ruff]
line-length = 120

lint.select = ["ALL"]
lint.ignore = [
    "ANN002",  # https://docs.astral.sh/ruff/rules/missing-type-args/
    "ANN003",  # https://docs.astral.sh/ruff/rules/missing-type-kwargs/
    "ANN101",  # https://docs.astral.sh/ruff/rules/missing-type-self/
    "ANN102",  # https://docs.astral.sh/ruff/rules/missing-type-cls/
    "ANN401",  # https://docs.astral.sh/ruff/rules/any-type/
    "PLR0913",  # https://docs.astral.sh/ruff/rules/too-many-arguments/
    "EM101",  # https://docs.astral.sh/ruff/rules/raw-string-in-exception/
    "EM102",  # https://docs.astral.sh/ruff/rules/f-string-in-exception/
    "TRY003",  # https://docs.astral.sh/ruff/rules/raise-vanilla-args/
    "D407",  # https://docs.astral.sh/ruff/rules/dashed-underline-after-section/
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "ISC001", # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "docs",
    "migrations",
    "node_modules",
    "venv",
    "_version.py"
]

ignore = [
]

[tool.ruff.lint.pydocstyle] # https://docs.astral.sh/ruff/settings/#lint_pydocstyle_convention
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/test{s,}/*.py" = [
    "S101",  # https://docs.astral.sh/ruff/rules/assert/
    "D",  # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "ARG001",  # https://docs.astral.sh/ruff/rules/unused-function-argument/
    "INP",  # https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "ANN",  # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
]

target-version = "py311"
